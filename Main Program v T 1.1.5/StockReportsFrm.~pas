unit StockReportsFrm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, JvExButtons, JvBitBtn, RpDefine, RpBase,
  RpSystem, JvExStdCtrls, JvDBCombobox, JvExControls, JvComponent,
  JvDBLookup, ComCtrls, JvExComCtrls, JvDateTimePicker, UtilsUnit, DateUtils,
  JvCheckBox;

type
  TStockReportsForm = class(TForm)
    JvBitBtn1: TJvBitBtn;
    JvBitBtn2: TJvBitBtn;
    JvBitBtn3: TJvBitBtn;
    RvSystem1: TRvSystem;
    GroupBox1: TGroupBox;
    CheckBox1: TCheckBox;
    Label1: TLabel;
    JvDBLookupCombo1: TJvDBLookupCombo;
    GroupBox2: TGroupBox;
    JvBitBtn5: TJvBitBtn;
    FromDate: TJvDateTimePicker;
    ToDate: TJvDateTimePicker;
    Label2: TLabel;
    Label3: TLabel;
    JvCheckBox1: TJvCheckBox;
    procedure JvBitBtn1Click(Sender: TObject);
    procedure JvBitBtn2Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure RvSystem1Print(Sender: TObject);
    procedure CheckBox1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure JvBitBtn5Click(Sender: TObject);
  private
    procedure PrintAverageSalesReport(report: TBaseReport);
    function FindInvoiceStock(TCStockNoStr, StockNoStr: String): Extended;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  StockReportsForm: TStockReportsForm;
  s: String;

implementation

uses DataFrm2, StockListFrm, UserFrm, StockFrm;

{$R *.dfm}

procedure TStockReportsForm.JvBitBtn1Click(Sender: TObject);
var
      s2: String;
begin
      if (DataForm2.User_db.FieldByName('Rights').asInteger > 3) then
      begin
        Application.CreateForm(TStockForm, StockForm);
        Application.CreateForm(TStockListForm, StockListForm);
        If Checkbox1.Checked = False then
        begin
          s := 'Where BranchNo = ' + InttoStr(Dataform2.BranchTableNr.Value);
          StockListForm.QRLabel5.Caption := '';
          StockListForm.QRLabel6.Caption := '';
        end
        else
        begin
          StockListForm.QRLabel5.Caption := 'HQ Qty Left';
          s := 'Where BranchNo is null';
        end;
        If JvCheckBox1.Checked then
        begin
          s2 := 'and Qty <> 0'
        end
        else
          s2 := '';
        DataForm2.Query3.Active := False;
        with DataForm2.Query3.SQL do begin
                Clear;
                Add('select Nr, Description, Qty, BranchNo, TCStockNo, Barcode');
                Add('from stock_db');
                Add(s);
                Add(s2);
                Add('Order by TCStockNo');
        end;
        DataForm2.Query3.Active := True;
        StockListForm.QRLabel1.Caption := 'Stock List for ' + datetostr(date);
        StockListForm.Quickrep1.Preview;
        Dataform2.Query3.Close;
        StockListForm.FreeOnRelease;
        StockForm.FreeOnRelease;
      end
      else
        showMessage('You don''t have permision to go in here!');
end;

procedure TStockReportsForm.JvBitBtn2Click(Sender: TObject);
var
      s2: String;
begin
      if (DataForm2.User_db.FieldByName('Rights').asInteger > 3) then
      begin
        Application.CreateForm(TStockListForm, StockListForm);
        StockListForm.QRLabel5.Caption := '';
        StockListForm.QRLabel6.Caption := '';
        If Checkbox1.Checked = False then
          s := 'and BranchNo = ' + InttoStr(Dataform2.BranchTableNr.Value)
        else
          s := 'and BranchNo is null';
        DataForm2.Query3.Close;
        If JvCheckBox1.Checked then
        begin
          s2 := 'and Qty <> 0'
        end
        else
          s2 := '';
        with DataForm2.Query3.SQL do begin
                Clear;
                Add('select Nr, Description, Qty, BranchNo, TCStockNo, Barcode');
                Add('from stock_db');
                Add('where Qty < AlertQty');
                Add('and NonStockItem = "False"');
                Add(s);
                Add(s2);
        end;
        DataForm2.Query3.Open;
        StockListForm.QRLabel1.Caption := 'Out of stock List for ' + datetostr(date);
        StockListForm.Quickrep1.Preview;
        StockListForm.FreeOnRelease;
        DataForm2.Query3.Close;
      end
      else
        showMessage('You don''t have permision to go in here!');
end;

procedure TStockReportsForm.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
      Dataform2.BranchTable.Close;
      StockReportsform.FreeOnRelease;
end;

procedure TStockReportsForm.RvSystem1Print(Sender: TObject);
begin
    PrintAverageSalesReport(RvSystem1.BaseReport);
end;

procedure TStockReportsForm.PrintAverageSalesReport(report: TBaseReport);
var
  SCount: Integer;
  MonthsBetweenValue: Integer;
begin
      MonthsBetweenValue := MonthsBetween(FromDate.Date, ToDate.Date);
//      If MonthsBetweenValue > 0 then
//      begin
        SCount := 0;
        with report do
        begin
          DataForm2.Query3.Close;
          with DataForm2.Query3.SQL do begin
                Clear;
                Add('select Nr, Description, Qty, TCStockNo, CostPrice');
                Add('from stock_db');
                Add('Where BranchNo is null');
                Add('Order by TCStockNo');
          end;
          DataForm2.Query3.Open;
          MarginLeft := 0.250;
          MarginTop := 0.250;
          SetFont('Arial',9);
          Bold := true;
          UserForm.Memo2.Lines.loadfromfile(Dataform2.ProgramPath + '\client.txt');
          for SCount := 0 to UserForm.Memo2.Lines.Count - 1 do
          begin
            printLeft(UserForm.Memo2.Lines[SCount], 0.250);
            NewLine;
          end;
          SCount := 0;
          NewLine;
          NewLine;
          PrintLeft('Print average sales per month', 0.250);
          NewLine;
          NewLine;
          Bold := False;

          ClearTabs;
          SetTab(0.3, pjLeft,0.8,0,0,0);
          SetTab(NA, pjLeft,1,0,0,0);
          SetTab(NA, pjLeft,2.4,0,0,0);
          SetTab(NA, pjLeft,1.5,0,0,0);
          SetTab(NA, pjLeft,0.8,0,0,0);
          SetTab(NA, pjLeft,0.8,0,0,0);
          PrintTab('Stock No');
          PrintTab('TC Stock No');
          PrintTab('Description');
          PrintTab('Average Sales per Mnth');
          PrintTab('Stock Level');
          PrintTab('Latest Cost');
          NewLine;

          Dataform2.Query3.DisableControls;
          Dataform2.Query3.First;
          while not Dataform2.Query3.EOF do
          begin
            NewLine;
            PrintTab(InttoStr(Dataform2.Query3.Fieldbyname('Nr').asInteger));
            PrintTab(Dataform2.Query3.Fieldbyname('TCStockNo').asString);
            PrintTab(Dataform2.Query3.Fieldbyname('Description').asString);
            If MonthsBetweenValue > 0 then
              PrintTab(Floattostr(FindInvoiceStock(Dataform2.Query3.FieldByname('TCStockNo').AsString,InttoStr(Dataform2.Query3.FieldByName('Nr').AsInteger)) / MonthsBetweenValue))
            else
              PrintTab(Floattostr(FindInvoiceStock(Dataform2.Query3.FieldByname('TCStockNo').AsString,InttoStr(Dataform2.Query3.FieldByName('Nr').AsInteger))));
            PrintTab(FloattoStr(Dataform2.Query3.Fieldbyname('Qty').asFloat));
            PrintTab(Floattostrf(Dataform2.Query3.Fieldbyname('CostPrice').asFloat * 1.14,ffFixed,17,2));
            Inc(SCount);
            If SCount = 62 then
            begin
              NewPage;
              SCount := 0;
            end;
            Dataform2.Query3.Next;
          end;
          Dataform2.Query3.EnableControls;
        end;
//      end
//      else
//        showmessage('Dates must span more than one Month!');
end;

procedure TStockReportsForm.CheckBox1Click(Sender: TObject);
begin
      If Checkbox1.Checked = True then
        JvDBLookupCombo1.Enabled := False
      else
        JvDBLookupCombo1.Enabled := True;
end;

procedure TStockReportsForm.FormShow(Sender: TObject);
begin
      FromDate.Date := StartoftheMonth(date);
      ToDate.Date := endofthemonth(date);
end;

procedure TStockReportsForm.JvBitBtn5Click(Sender: TObject);
begin
      if (DataForm2.User_db.FieldByName('Rights').asInteger > 3) then
      begin
        RvSystem1.Execute;
      end
      else
        showMessage('You don''t have permision to go in here!');
end;

function TStockReportsForm.FindInvoiceStock(TCStockNoStr,StockNoStr:String): Extended;
var
    e: extended;
begin
      Dataform2.Query1.Close;
      with DataForm2.Query1.SQL do begin
        Clear;
        Add('SELECT invoice_db.InvNo,invoice_db.InvDate,invoiceitem_db.TCStockNo, invoiceitem_db.StockNo, invoiceitem_db.qty');
        Add('from invoice_db, invoiceitem_db');
        Add('where invoice_db.Nr = invoiceitem_db.LinkID');
        Add('and invoiceitem_db.TCStockNo = ''' + TCStockNoStr + '''');
        Add('and ((invoice_db.InvClose = ''Close'') or (invoice_db.InvClose = ''LaybC''))');
      end;
      Dataform2.Query1.Open;
      Dataform2.Query1.DisableControls;
      Dataform2.Query1.First;
      e := 0.00;
      while not Dataform2.Query1.EOF do
      begin
        If (Dataform2.Query1.FieldByName('InvDate').AsInteger > DatetoIntDate(FromDate.Date) - 1) and
           (Dataform2.Query1.FieldByName('InvDate').AsInteger < DatetoIntDate(ToDate.Date) + 1) then
          e := e + Dataform2.Query1.FieldByName('Qty').asFloat;
        Dataform2.Query1.Next;
      end;
      Dataform2.Query1.EnableControls;
      FindInvoiceStock := e;
end;

end.



