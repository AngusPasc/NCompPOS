unit StockSearchFrm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Grids, DBGrids, JvExDBGrids, JvDBGrid, StdCtrls, Buttons, db,
  Mask, JvExMask, JvToolEdit, JvMaskEdit, JvDBFindEdit, JvExStdCtrls,
  JvEdit, Math, JvExButtons, JvBitBtn, UtilsUnit;

type
  TStockSearchForm = class(TForm)
    JvDBGrid1: TJvDBGrid;
    DescriptionSearch: TJvEdit;
    Label1: TLabel;
    Label2: TLabel;
    Barcodesearch: TJvEdit;
    Button5: TButton;
    Button6: TButton;
    Button7: TButton;
    Button8: TButton;
    Label3: TLabel;
    ExtDSearch: TJvEdit;
    JvBitBtn1: TJvBitBtn;
    JvBitBtn2: TJvBitBtn;
    JvBitBtn3: TJvBitBtn;
    Label4: TLabel;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure JvDBGrid1DblClick(Sender: TObject);
    procedure JvDBGrid1KeyPress(Sender: TObject; var Key: Char);
    procedure Button5Click(Sender: TObject);
    procedure JvDBFindEdit1KeyPress(Sender: TObject; var Key: Char);
    procedure Button6Click(Sender: TObject);
    procedure Button7Click(Sender: TObject);
    procedure Button8Click(Sender: TObject);
    procedure Button5KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure SearchBarcode;
    procedure SearchDescription;
    procedure JvDBGrid1TitleBtnClick(Sender: TObject; ACol: Integer;
      Field: TField);
    procedure JvDBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure JvBitBtn1Click(Sender: TObject);
    procedure JvBitBtn2Click(Sender: TObject);
    procedure DescriptionSearchKeyPress(Sender: TObject; var Key: Char);
    procedure BarcodesearchKeyPress(Sender: TObject; var Key: Char);
    procedure ExtDSearchKeyPress(Sender: TObject; var Key: Char);
  private
    procedure FKeysPress;
    procedure SearchExtD;
    procedure StockOpen;
    { Private declarations }
  public
    { Public declarations }
    fromwheretmp: String;
    StopStr: String;
    StockOrder: String;
  end;

var
  StockSearchForm: TStockSearchForm;
  Order: String;

implementation
    uses DataFrm2, InvoiceFrm, PurchaseFrm;

{$R *.dfm}

procedure TStockSearchForm.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
//        If fromWhereTmp <> 'Stock' then
//          DataForm2.StockTable.Filtered := False;
end;

procedure TStockSearchForm.FormShow(Sender: TObject);
begin
        StockSearchForm.Left := 10;
        StockSearchForm.Top := Screen.Height - 400;
        If (Order = 'Barcode') or (Order = 'TCStockNo') then
          Barcodesearch.SetFocus
        else
        begin
          if Order = 'ExtraDescr' then
            ExtDSearch.SetFocus
          else
          begin
            Order := 'Description';
            StockOrder := 'Description';
            DescriptionSearch.SetFocus;
          end;
        end;
        If (StrtoBool(DataForm2.IniFile.ReadString ('TCSetup', 'TCStockNoBarcode', '0')) = True)
           and (fromwheretmp = 'Invoice')
           and (InvoiceForm.Edit1.Text <> '') then
        begin
          Dataform2.StockTable.Locate('TCStockNo',InvoiceForm.Edit1.Text,[loPartialKey, loCaseInsensitive])
        end;
        If StrtoBool(DataForm2.IniFile.ReadString ('LayBuySetup', 'Enable', '0')) = True then
          Label4.Visible := True
        else
          Label4.Visible := False;
end;

procedure TStockSearchForm.JvDBGrid1DblClick(Sender: TObject);
begin
      If fromwheretmp = 'Invoice' then
      begin
        fromwheretmp := '';
        InvoiceForm.InsertProduct;
        close;
      end;
      If fromwheretmp = 'Purchases' then
      begin
        fromwheretmp := '';
        DataForm2.PurchaseItemTable.Insert;
        DataForm2.PurchaseItemTableDescription.Value := Dataform2.StockTableDescription.Value;
        DataForm2.PurchaseItemTablePrice.Value := DataForm2.StockTableSalesPrice.Value;
        Dataform2.PurchaseItemTableStockNo.Value := Dataform2.StockTableNr.Value;
        DataForm2.PurchaseItemTableCostPrice.Value := MyRoundTo((DataForm2.StockTableCostPrice.Value * 100 / 114),-2);
        DataForm2.PurchaseItemTablePrice2.Value := DataForm2.StockTableSalesPrice2.Value;
        DataForm2.PurchaseItemTableBarcode.Value := DataForm2.StockTableBarcode.Value;
        dataForm2.PurchaseItemTableTCStockNo.Value := DataForm2.StockTableTCStockNo.Value;
        Dataform2.PurchaseItemTableExtraDescr.Value := DataForm2.StockTableExtraDescr.Value;
        Dataform2.PurchaseItemTableModelNo.Value := DataForm2.StockTableModelNo.Value;
        Purchaseform.JvdbGrid1.Col := 1;
        Purchaseform.JvdbGrid1.SetFocus;
        close;
      end;
end;

procedure TStockSearchForm.JvDBGrid1KeyPress(Sender: TObject;
  var Key: Char);
begin
    if Key = #13 then
    begin
      If fromwheretmp = 'Invoice' then
      begin
        fromwheretmp := '';
        InvoiceForm.InsertProduct;
        InvoiceForm.Edit1.setFocus;
        close;
      end;
      If fromwheretmp = 'Purchases' then
      begin
        fromwheretmp := '';
        DataForm2.PurchaseItemTable.Insert;
        DataForm2.PurchaseItemTableDescription.Value := Dataform2.StockTableDescription.Value;
        DataForm2.PurchaseItemTablePrice.Value := DataForm2.StockTableSalesPrice.Value;
        DataForm2.PurchaseItemTableQty.Value := 1;
        Dataform2.PurchaseItemTableStockNo.Value := Dataform2.StockTableNr.Value;
        DataForm2.PurchaseItemTableCostPrice.Value := MyRoundTo((DataForm2.StockTableCostPrice.Value * 100 / 114),-2);
        DataForm2.PurchaseItemTablePrice2.Value := DataForm2.StockTableSalesPrice2.Value;
        DataForm2.PurchaseItemTableBarcode.Value := DataForm2.StockTableBarcode.Value;
        dataForm2.PurchaseItemTableTCStockNo.Value := DataForm2.StockTableTCStockNo.Value;
        Dataform2.PurchaseItemTableExtraDescr.Value := DataForm2.StockTableExtraDescr.Value;
        Dataform2.PurchaseItemTableModelNo.Value := DataForm2.StockTableModelNo.Value;
        Purchaseform.JvdbGrid1.Col := 1;
        Purchaseform.JvdbGrid1.SetFocus;
        close;
      end;
    end
    else
    begin
      If Key <> #00 then
        DataForm2.StockTable.Locate(Order, Key, [loPartialKey, loCaseInsensitive]);
    end;
end;

procedure TStockSearchForm.Button5Click(Sender: TObject);
begin
      If Order <> 'Description' then
      begin
        Order := 'Description';
        StockOrder := 'Description';
        StockOpen;
      end;
      Dataform2.StockTable.First;
      SearchDescription();
      JvDBGrid1.SetFocus;
end;

procedure TStockSearchForm.JvDBFindEdit1KeyPress(Sender: TObject;
  var Key: Char);
begin
    if Key = #13 then
    begin
      JvDBGrid1.SetFocus;
    end;
end;

procedure TStockSearchForm.SearchDescription();
var
  i: Integer;
begin
    DataForm2.StockTable.DisableControls;
    try
    while not DataForm2.StockTable.EOF do
      begin
        for i := 0 to (DataForm2.StockTable.fieldbyname('Description').Size - 1) do
        begin
          if copy(lowercase(DataForm2.StockTable.fieldbyname('Description').asString),i,DescriptionSearch.GetTextLen) = lowercase(DescriptionSearch.Text) then
          begin
            StopStr := 'Stop';
            break;
          end;
        end;
        if StopStr = 'Stop' then
          break;
        DataForm2.StockTable.Next;
      end;
    finally
    DataForm2.StockTable.EnableControls;
    end;
    StopStr := 'No';
end;

procedure TStockSearchForm.SearchBarcode();
var
  i: Integer;
begin
  If StrtoBool(DataForm2.IniFile.ReadString ('TCSetup', 'TCStockNoBarcode', '0')) = False then
  begin
    DataForm2.StockTable.DisableControls;
    try
    while not DataForm2.StockTable.EOF do
      begin
        for i := 0 to (DataForm2.StockTable.fieldbyname('Barcode').Size - 1) do
        begin
          if copy(lowercase(DataForm2.StockTable.fieldbyname('Barcode').asString),i,BarcodeSearch.GetTextLen) = lowercase(BarcodeSearch.Text) then
          begin
            StopStr := 'Stop';
            break;
          end;
        end;
        if StopStr = 'Stop' then
          break;
        DataForm2.StockTable.Next;
      end;
    finally
    DataForm2.StockTable.EnableControls;
    end;
    StopStr := 'No';
  end
  else
  begin
    DataForm2.StockTable.DisableControls;
    try
    while not DataForm2.StockTable.EOF do
      begin
        for i := 0 to (DataForm2.StockTable.fieldbyname('TCStockNo').Size - 1) do
        begin
          if copy(lowercase(DataForm2.StockTable.fieldbyname('TCStockNo').asString),i,BarcodeSearch.GetTextLen) = lowercase(BarcodeSearch.Text) then
          begin
            StopStr := 'Stop';
            break;
          end;
        end;
        if StopStr = 'Stop' then
          break;
        DataForm2.StockTable.Next;
      end;
    finally
    DataForm2.StockTable.EnableControls;
    end;
    StopStr := 'No';
  end;
end;

procedure TStockSearchForm.Button6Click(Sender: TObject);
begin
  If StrtoBool(DataForm2.IniFile.ReadString ('TCSetup', 'TCStockNoBarcode', '0')) = False then
  begin
    If Order <> 'BarCode' then
    begin
      Order := 'BarCode';
      StockOrder := 'Barcode';
      StockOpen;
    end;
  end
  else
  begin
    If Order <> 'TCStockNo' then
    begin
      Order := 'TCStockNo';
      StockOrder := 'TCStockNo';
      StockOpen;
    end;
  end;

  Dataform2.StockTable.First;
  SearchBarcode();
  JvDBGrid1.SetFocus;
end;

procedure TStockSearchForm.Button7Click(Sender: TObject);
begin
  DataForm2.StockTable.Next;
  SearchDescription();
  JvDBGrid1.SetFocus;
end;

procedure TStockSearchForm.Button8Click(Sender: TObject);
begin
  DataForm2.StockTable.Next;
  SearchBarcode();
  JvDBGrid1.SetFocus;
end;

procedure TStockSearchForm.FKeysPress();
begin
      if HiWord(GetKeyState(vk_f1)) <> 0 then
      begin
        DescriptionSearch.SetFocus;
        DescriptionSearch.SelectAll;
      end;
      if HiWord(GetKeyState(vk_f2)) <> 0 then
      begin
        Button5.Click;
      end;
      if HiWord(GetKeyState(vk_f3)) <> 0 then
      begin
        Button7.Click;
      end;
      if HiWord(GetKeyState(vk_f4)) <> 0 then
      begin
        JVDbGrid1.SetFocus;
      end;
      if HiWord(GetKeyState(vk_f5)) <> 0 then
      begin
        BarcodeSearch.SetFocus;
        BarcodeSearch.SelectAll;
      end;
      if HiWord(GetKeyState(vk_f6)) <> 0 then
      begin
        Button6.Click;
      end;
      if HiWord(GetKeyState(vk_f7)) <> 0 then
      begin
        Button8.Click;
      end;
      if HiWord(GetKeyState(vk_f9)) <> 0 then
      begin
        ExtDSearch.SetFocus;
        ExtDSearch.SelectAll;
      end;
      if HiWord(GetKeyState(vk_f10)) <> 0 then
      begin
        JvBitBtn1.Click;
      end;
      if HiWord(GetKeyState(vk_f12)) <> 0 then
      begin
        JvBitBtn2.Click;
      end;
end;

procedure TStockSearchForm.Button5KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
      FKeysPress();
end;

procedure TStockSearchForm.JvDBGrid1TitleBtnClick(Sender: TObject;
  ACol: Integer; Field: TField);
begin
      If ACol = 0 then
      begin
        Order := 'Description';
        If StockOrder = 'Description' then
          StockOrder := 'Description DESC'
        else
          StockOrder := 'Description';
//        Button5.Click;
      end;
      If ACol = 1 then
      begin
        Order := 'Barcode';
        If StockOrder = 'Barcode' then
          StockOrder := 'Barcode DESC'
        else
          StockOrder := 'Barcode';
//        Button5.Click;
      end;
//      if (Directoryexists(DataForm2.IniFile.ReadString('TCSetup', 'TCPath', ''))) then
//      begin
        If ACol = 2 then
        begin
          Order := 'TcStockNo';
          If StockOrder = 'TCStockNo' then
            StockOrder := 'TCStockNo DESC'
          else
            StockOrder := 'TCStockNo';
//          Button5.Click;
        end;
//      end
//      else
//      begin
//        If ACol = 3 then
//        begin
//          Order := 'Nr';
//          If StockOrder = 'Nr' then
//            StockOrder := 'Nr DESC'
//          else
//            StockOrder := 'Nr';
//          Button5.Click;
//        end;
//      end;
      If ACol = 3 then
      begin
        Order := 'ExtraDescr';
        If StockOrder = 'ExtraDescr' then
          StockOrder := 'ExtraDescr DESC'
        else
          StockOrder := 'ExtraDescr';
//        Button5.Click;
      end;
      StockOpen;
//      showmessage(order);
end;

procedure TStockSearchForm.JvDBGrid1DrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn;
  State: TGridDrawState);
var
    e: extended;
begin
        if StrtoBool(DataForm2.IniFile.ReadString ('Settings', 'NegQty', '0')) = true then
        begin
          If DataForm2.StockTableQty.Value < 0.01  then
          begin
            JvDBGrid1.Canvas.Font.Color := clLime;
          end;
        end;
        If StrtoBool(DataForm2.IniFile.ReadString ('LayBuySetup', 'Enable', '0')) = True then
        begin
          e := Invoiceform.OpenLayBuyQty(Dataform2.StockTableTCStockNo.Value);
          If e > 0 then
          begin
            JvDBGrid1.Canvas.Font.Color := clFuchsia;
          end;
        end;
     // Default drawing.
        JvDBGrid1.DefaultDrawDataCell(Rect, Column.Field,State);
end;

procedure TStockSearchForm.SearchExtD();
var
  i: Integer;
begin
    DataForm2.StockTable.DisableControls;
    try
    while not DataForm2.StockTable.EOF do
      begin
        for i := 0 to (DataForm2.StockTable.fieldbyname('ExtraDescr').Size - 1) do
        begin
          if copy(lowercase(DataForm2.StockTable.fieldbyname('ExtraDescr').asString),i,ExtDSearch.GetTextLen) = lowercase(ExtDSearch.Text) then
          begin
            StopStr := 'Stop';
            break;
          end;
        end;
        if StopStr = 'Stop' then
          break;
        DataForm2.StockTable.Next;
      end;
    finally
    DataForm2.StockTable.EnableControls;
    end;
    StopStr := 'No';
end;

procedure TStockSearchForm.JvBitBtn1Click(Sender: TObject);
begin
      If Order <> 'ExtraDescr' then
      begin
        Order := 'ExtraDescr';
        StockOrder := 'ExtraDescr';
        StockOpen;
      end;
      Dataform2.StockTable.First;
      SearchExtD();
      JvDBGrid1.SetFocus;
end;

procedure TStockSearchForm.JvBitBtn2Click(Sender: TObject);
begin
  DataForm2.StockTable.Next;
  SearchExtD();
  JvDBGrid1.SetFocus;
end;

procedure TStockSearchForm.DescriptionSearchKeyPress(Sender: TObject;
  var Key: Char);
begin
    if Key = #13 then
    begin
      JvDBGrid1.SetFocus;
    end
    else
    begin
      If Order <> 'Description' then
      begin
        Order := 'Description';
        StockOrder := 'Description';
        StockOpen;
      end;
      DataForm2.StockTable.Locate('Description', DescriptionSearch.Text, [loPartialKey, loCaseInsensitive]);
    end;
end;

procedure TStockSearchForm.BarcodesearchKeyPress(Sender: TObject;
  var Key: Char);
begin
    if Key = #13 then
    begin
      JvDBGrid1.SetFocus;
    end
    else
    begin
      If StrtoBool(DataForm2.IniFile.ReadString ('TCSetup', 'TCStockNoBarcode', '0')) = False then
      begin
        If Order <> 'BarCode' then
        begin
          Order := 'BarCode';
          StockOrder := 'Barcode';
          StockOpen;
        end;
        DataForm2.StockTable.Locate('Barcode', BarcodeSearch.Text, [loPartialKey, loCaseInsensitive]);
      end
      else
      begin
        If Order <> 'TCStockNo' then
        begin
          Order := 'TCStockNo';
          StockOrder := 'TCStockNo';
          StockOpen;
        end;
        DataForm2.StockTable.Locate('TCStockNo', BarcodeSearch.Text, [loPartialKey, loCaseInsensitive]);
      end;
    end;
end;

procedure TStockSearchForm.ExtDSearchKeyPress(Sender: TObject;
  var Key: Char);
begin
    if Key = #13 then
    begin
      JvDBGrid1.SetFocus;
    end
    else
    begin
      If Order <> 'ExtraDescr' then
      begin
        Order := 'ExtraDescr';
        StockOrder := 'ExtraDescr';
        StockOpen;
      end;
      DataForm2.StockTable.Locate('ExtraDescr', ExtDSearch.Text, [loPartialKey, loCaseInsensitive]);
    end;
end;

procedure TStockSearchForm.StockOpen();
var
   StockPlace: Integer;
begin
      StockPlace := Dataform2.StockTableNr.Value;
      Dataform2.StockTable.Close;
      with Dataform2.StockTable.SQL do
      begin
        Clear;
        Add('select * from stock_db');
        Add('where BranchNo is null');
        Add('order by ' + StockOrder);
      end;
      Dataform2.StockTable.Open;
      Dataform2.StockTable.Locate('Nr', InttoStr(StockPlace),[]);
end;

end.
