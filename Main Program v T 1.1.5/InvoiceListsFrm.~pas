unit InvoiceListsFrm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, QRCtrls, QuickRpt, ExtCtrls, StdCtrls, ComCtrls, JvExComCtrls,
  JvDateTimePicker, DBCtrls, db, Buttons, UtilsUnit, JvExButtons, JvBitBtn,
  DateUtils, Math;

type
  TInvoiceListsForm = class(TForm)
    GroupBox1: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    DBLookupComboBox1: TDBLookupComboBox;
    DateListEdit: TJvDateTimePicker;
    Button1: TButton;
    GroupBox2: TGroupBox;
    Label3: TLabel;
    Label4: TLabel;
    Fromdate: TJvDateTimePicker;
    ToDate: TJvDateTimePicker;
    Button2: TButton;
    DailyList: TQuickRep;
    QRBand1: TQRBand;
    QRLabel1: TQRLabel;
    QRLabel5: TQRLabel;
    QRLabel6: TQRLabel;
    QRLabel7: TQRLabel;
    QRLabel8: TQRLabel;
    QRLabel9: TQRLabel;
    QRLabel2: TQRLabel;
    QRLabel16: TQRLabel;
    QRBand2: TQRBand;
    QRDBText1: TQRDBText;
    QRLabel11: TQRLabel;
    QRBand3: TQRBand;
    QRLabel13: TQRLabel;
    QRLabel14: TQRLabel;
    QRDBText2: TQRDBText;
    QRDBText6: TQRDBText;
    QRLabel10: TQRLabel;
    QRLabel12: TQRLabel;
    QRLabel3: TQRLabel;
    BitBtn1: TBitBtn;
    QRLabel4: TQRLabel;
    QRLabel15: TQRLabel;
    QRLabel17: TQRLabel;
    QRLabel18: TQRLabel;
    QRLabel19: TQRLabel;
    QRLabel20: TQRLabel;
    JvBitBtn1: TJvBitBtn;
    JvBitBtn2: TJvBitBtn;
    JvBitBtn3: TJvBitBtn;
    QRDBText3: TQRDBText;
    QRLabel21: TQRLabel;
    QRLabel22: TQRLabel;
    QRDBText4: TQRDBText;
    JvBitBtn4: TJvBitBtn;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure DailyListBeforePrint(Sender: TCustomQuickRep;
      var PrintReport: Boolean);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure QRBand2BeforePrint(Sender: TQRCustomBand;
      var PrintBand: Boolean);
    procedure QRBand3BeforePrint(Sender: TQRCustomBand;
      var PrintBand: Boolean);
    procedure JvBitBtn1Click(Sender: TObject);
    procedure JvBitBtn2Click(Sender: TObject);
    procedure JvBitBtn3Click(Sender: TObject);
    procedure JvBitBtn4Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    Total, TotalVat, TotalWithoutVat: extended;
    s: String;
  end;

var
  InvoiceListsForm: TInvoiceListsForm;
  Fromwhere: string;

implementation
      uses DataFrm2, GridExportFrm;

{$R *.dfm}

procedure TInvoiceListsForm.Button1Click(Sender: TObject);
begin
      DataForm2.Query3.Active := False;
      s := 'WHERE (InvBy = "' + DataForm2.user_db.fieldbyname('UserName').asString + '") and';
      with DataForm2.Query3.SQL do begin
        Clear;
        Add('SELECT * FROM invoice_db');
        Add(s);
        Add('(InvDate = ' + InttoStr(DatetoIntDate(DateListEdit.Date)) + ')');
        Add('and InvClose = "Close"');
        Add('Order by InvNo');
      end;
      DataForm2.Query3.Active := True;
      Fromwhere := 'Inv';
      QRLabel1.Caption := 'Daily Invoices for: ' + DataForm2.user_db.fieldbyname('UserName').asString + ' and for Date: ' + DatetoStr(DateListEdit.Date);
      DailyList.Preview;
end;

procedure TInvoiceListsForm.Button2Click(Sender: TObject);
begin
      DataForm2.Query3.Close;
      with DataForm2.Query3.SQL do begin
        Clear;
        Add('SELECT * FROM invoice_db');
        Add('WHERE (InvDate >= ' + InttoStr(DatetoIntDate(FromDate.Date)) + ') and');
        Add('(InvDate <= ' + InttoStr(DatetoIntDate(ToDate.Date)) + ')');
        Add('and InvClose = "Close"');
        Add('Order by BranchNo, InvNo');
      end;
      DataForm2.Query3.Open;
      Fromwhere := 'Inv';
      QRLabel1.Caption := 'Monthly Invoices from: ' + datetostr(FromDate.Date) + ' to: ' + DatetoStr(ToDate.Date);
      DailyList.Preview;
end;

procedure TInvoiceListsForm.DailyListBeforePrint(Sender: TCustomQuickRep;
  var PrintReport: Boolean);
begin
       Total := 0.00;
       TotalVat := 0.00;
       TotalWithoutVat := 0.00;
       If (Fromwhere = 'Inv') or (Fromwhere = 'PInv') then
       begin
         QRLabel17.Caption := '';
         QRLabel18.Caption := '';
         QRLabel19.Caption := '';
         QRLabel20.Caption := '';
       end
       else
       begin
         QRLabel17.Caption := 'Payed';
         QRLabel19.Caption := 'Owed';
       end;
end;

procedure TInvoiceListsForm.FormShow(Sender: TObject);
begin
        DateListEdit.Date := date;
        Fromdate.Date := Startofthemonth(date);
        ToDate.Date := Endofthemonth(date);
end;

procedure TInvoiceListsForm.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
      DataForm2.User_db.Locate('UserName', DataForm2.UserNameStr, [loPartialKey, loCaseInsensitive]);
      InvoiceListsForm.FreeOnRelease;
end;

procedure TInvoiceListsForm.QRBand2BeforePrint(Sender: TQRCustomBand;
  var PrintBand: Boolean);
var
   invtotalstr: extended;
begin
       If (Fromwhere <> 'PInv') then
       begin
         Dataform2.Query2.Close;
         with DataForm2.Query2.SQL do begin
           Clear;
           Add('SELECT SUM(Round(Price * Qty,2) - (Round(Price * Qty,2) * (Discount / 100))) as Total FROM invoiceitem_db');
           Add('where LinkId = ' + inttostr(Dataform2.Query3.Fieldbyname('Nr').asInteger));
         end;
         Dataform2.Query2.Open;
         invtotalstr := DataForm2.Query2.Fieldbyname('Total').asFloat;
         QRLabel10.Caption := Floattostrf(DataForm2.Query2.Fieldbyname('Total').asFloat - (DataForm2.Query2.Fieldbyname('Total').asFloat * 14 / 114),ffCurrency,17,2);
         QRLabel12.Caption := Floattostrf(DataForm2.Query2.Fieldbyname('Total').asFloat * 14 / 114 ,ffCurrency,17,2);
         QRLabel3.Caption := Floattostrf(DataForm2.Query2.Fieldbyname('Total').asFloat,ffCurrency,17,2);
         Total := Total + DataForm2.Query2.Fieldbyname('Total').asFloat;
         TotalVat := TotalVat + (DataForm2.Query2.Fieldbyname('Total').asFloat * 14 / 114);
         TotalWithoutVat := TotalWithoutVat + (DataForm2.Query2.Fieldbyname('Total').asFloat - (DataForm2.Query2.Fieldbyname('Total').asFloat * 14 / 114));
       end
       else
       begin
//         Dataform2.Query2.Close;
//         with DataForm2.Query2.SQL do begin
//           Clear;
//           Add('SELECT SUM(Round(CostPrice * Qty,2)) as Total FROM invoiceitem_db');
//           Add('where LinkId = ' + inttostr(Dataform2.Query3.Fieldbyname('Nr').asInteger));
//         end;
//         Dataform2.Query2.Open;
         Dataform2.Query2.Close;
         with DataForm2.Query2.SQL do begin
           Clear;
           Add('SELECT SUM(Round(CostPrice * Qty,2) - (Round(CostPrice * Qty,2) * (Discount / 100))) as Total FROM invoiceitem_db');
           Add('where LinkId = ' + inttostr(Dataform2.Query3.Fieldbyname('Nr').asInteger));
         end;
         Dataform2.Query2.Open;
         QRLabel10.Caption := Floattostrf(DataForm2.Query2.Fieldbyname('Total').asFloat,ffCurrency,17,2);
         QRLabel12.Caption := Floattostrf(RoundTo(DataForm2.Query2.Fieldbyname('Total').asFloat * 14 / 100, -2) ,ffCurrency,17,2);
         QRLabel3.Caption := Floattostrf(DataForm2.Query2.Fieldbyname('Total').asFloat + (RoundTo(DataForm2.Query2.Fieldbyname('Total').asFloat * 14 / 100, -2)),ffCurrency,17,2);
         Total := Total + (DataForm2.Query2.Fieldbyname('Total').asFloat + (DataForm2.Query2.Fieldbyname('Total').asFloat * 14 / 100));
         TotalVat := TotalVat + (DataForm2.Query2.Fieldbyname('Total').asFloat * 14 / 100);
         TotalWithoutVat := TotalWithoutVat + DataForm2.Query2.Fieldbyname('Total').asFloat;
       end;
       QRLabel11.Caption := IntDatetoString(DataForm2.Query3.Fieldbyname('InvDate').asInteger);
       If FromWhere = 'Layb' then
       begin
         DataForm2.Query2.Close;
         with DataForm2.Query2.SQL do begin
           Clear;
           Add('SELECT Sum(Ammount) as Total FROM trans_db');
           Add('where LinkID = ' + InttoStr(Dataform2.Query3.FieldByName('InvNo').asInteger));
         end;
         Dataform2.Query2.Open;
         QRLabel18.Caption := Floattostrf(DataForm2.Query2.Fieldbyname('Total').asFloat,ffCurrency,17,2);
         QrLabel20.Caption := Floattostrf(invtotalstr - DataForm2.Query2.Fieldbyname('Total').asFloat,ffCurrency,17,2);
       end;
end;

procedure TInvoiceListsForm.QRBand3BeforePrint(Sender: TQRCustomBand;
  var PrintBand: Boolean);
begin
       QRLabel15.Caption := Floattostrf(TotalWithoutVat,ffCurrency,17,2);
       QRLabel4.Caption := Floattostrf(TotalVat,ffCurrency,17,2);
       QRLabel13.Caption := Floattostrf(Total,ffCurrency,17,2);
end;

procedure TInvoiceListsForm.JvBitBtn1Click(Sender: TObject);
begin
      DataForm2.Query3.Close;
      with DataForm2.Query3.SQL do begin
        Clear;
        Add('SELECT * FROM invoice_db');
        Add('WHERE (InvDate >= ' + InttoStr(DatetoIntDate(FromDate.Date)) + ') and');
        Add('(InvDate <= ' + InttoStr(DatetoIntDate(ToDate.Date)) + ')');
        Add('and InvClose = "LaybO"');
        Add('Order by BranchNo, InvNo');
      end;
      DataForm2.Query3.Open;
      Fromwhere := 'Layb';
      QRLabel1.Caption := 'Monthly Open Lay Buys from: ' + datetostr(FromDate.Date) + ' to: ' + DatetoStr(ToDate.Date);
      DailyList.Preview;
end;

procedure TInvoiceListsForm.JvBitBtn2Click(Sender: TObject);
begin
      DataForm2.Query3.Close;
      with DataForm2.Query3.SQL do begin
        Clear;
        Add('SELECT * FROM invoice_db');
        Add('WHERE (InvDate >= ' + InttoStr(DatetoIntDate(FromDate.Date)) + ') and');
        Add('(InvDate <= ' + InttoStr(DatetoIntDate(ToDate.Date)) + ')');
        Add('and InvClose = "LaybC"');
        Add('Order by BranchNo, InvNo');
      end;
      DataForm2.Query3.Open;
      Fromwhere := 'Layb';
      QRLabel1.Caption := 'Monthly Closed Lay Buys from: ' + datetostr(FromDate.Date) + ' to: ' + DatetoStr(ToDate.Date);
      DailyList.Preview;
end;

procedure TInvoiceListsForm.JvBitBtn3Click(Sender: TObject);
begin
      DataForm2.Query3.Close;
      with DataForm2.Query3.SQL do begin
        Clear;
        Add('SELECT * FROM invoice_db');
        Add('WHERE (InvDate >= ' + InttoStr(DatetoIntDate(FromDate.Date)) + ') and');
        Add('(InvDate <= ' + InttoStr(DatetoIntDate(ToDate.Date)) + ')');
        Add('and InvClose = "PurcC"');
        Add('Order by BranchNo, InvNo');
      end;
      DataForm2.Query3.Open;
      Fromwhere := 'PInv';
      QRLabel1.Caption := 'Monthly Purchase Invoices from: ' + datetostr(FromDate.Date) + ' to: ' + DatetoStr(ToDate.Date);
      DailyList.Preview;
end;

procedure TInvoiceListsForm.JvBitBtn4Click(Sender: TObject);
begin
        Dataform2.InvoiceExportQuery.Parameters.ParamByName('BeginDate').Value := DatetoIntDate(FromDate.Date);
        Dataform2.InvoiceExportQuery.Parameters.ParamByName('EndDate').Value := DatetoIntDate(ToDate.Date);
        Dataform2.InvoiceExportQuery.Parameters.ParamByName('InvClose').Value := 'Close';
        Dataform2.InvoiceExportQuery.Parameters.ParamByName('order').Value := 'InvNo';
        Dataform2.InvoiceExportQuery.Open;
        Application.CreateForm(TGridExportForm, GridExportForm);
        GridExportForm.showmodal;
end;

end.
